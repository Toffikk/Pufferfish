--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -452,7 +_,7 @@
         if (this.isAlive()) {
             boolean flag = this instanceof Player;
             if (this.level() instanceof ServerLevel serverLevel1) {
-                if (this.isInWall()) {
+                if (shouldCheckForSuffocation() && this.isInWall()) { // Pufferfish - optimize suffocation
                     this.hurtServer(serverLevel1, this.damageSources().inWall(), 1.0F);
                 } else if (flag && !this.level().getWorldBorder().isWithinBounds(this.getBoundingBox())) {
                     double d = this.level().getWorldBorder().getDistanceToBorder(this) + this.level().getWorldBorder().getDamageSafeZone();
@@ -557,6 +_,19 @@
         profilerFiller.pop();
     }
 
+        // Pufferfish start - optimize suffocation
+        public boolean couldPossiblyBeHurt(float amount) {
+            if ((float) this.invulnerableTime > (float) this.invulnerableDuration / 2.0F && amount <= this.lastHurt) {
+                return false;
+            }
+            return true;
+        }
+    
+        public boolean shouldCheckForSuffocation() {
+            return !gg.pufferfish.pufferfish.PufferfishConfig.enableSuffocationOptimization || (tickCount % 10 == 0 && couldPossiblyBeHurt(1.0F));
+        }
+        // Pufferfish end
+    
     @Override
     protected float getBlockSpeedFactor() {
         return Mth.lerp((float)this.getAttributeValue(Attributes.MOVEMENT_EFFICIENCY), super.getBlockSpeedFactor(), 1.0F);
@@ -2019,6 +_,20 @@
     public Optional<BlockPos> getLastClimbablePos() {
         return this.lastClimbablePos;
     }
+
+    // Pufferfish start - Cache climbing check for activation
+    private boolean cachedOnClimbable = false;
+    private BlockPos lastClimbingPosition = null;
+
+    public boolean onClimbableCached() {
+        if (!this.blockPosition().equals(this.lastClimbingPosition)) {
+            this.cachedOnClimbable = this.onClimbable();
+            this.lastClimbingPosition = this.blockPosition();
+        }
+        return this.cachedOnClimbable;
+    }
+    // Pufferfish end
+
 
     public boolean onClimbable() {
         if (this.isSpectator()) {
